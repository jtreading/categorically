@page "/Transactions"
@using Categorically.Data
@inject TransactionService transactionService
@inject UserService userService

<h1>Transaction List</h1>

<div class="row mb-3">
    <div class="col-md-4">
        <label for="StartDate" class="control-label">Start Date</label>
        <input type="date" class="form-control" @bind="@startDate" />
    </div>
    <div class="col-md-4">
        <label for="EndDate" class="control-label">End Date</label>
        <input type="date" class="form-control" @bind="@endDate" />
    </div>
    <div class="col-md-4 form-group">
        <label for="selectedUserId">User:</label>
        <select id="selectedUserId" class="form-control" @bind="@selectedUserId" >
            <option value="">All Users</option>
            @foreach (var user in Users)
            {
                <option value="@user.UserId">@user.UserName</option>
            }
        </select>
    </div>
    <div class="col-md-3">
        <button class="btn btn-primary" @onclick="UpdateTransactionList">Update</button>
    </div>
</div>

@if (TransactionList is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>TransactionId</th>
                <th>TransactionDate</th>
                <th>Amount</th>
                <th>ChargedByName</th>
                <th>Description</th>
                <th>CategoryName</th>
                <th>UserName</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in TransactionList)
            {
                <tr>
                    <td>@transaction.TransactionId</td>
                    <td>@transaction.TransactionDate.ToShortDateString()</td>
                    <td>@transaction.Amount</td>
                    <td>@transaction.ChargedByName</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Category?.CategoryName</td>
                    <td>@transaction.User.UserName</td>
                    <td>
                        <a class="btn btn-primary" href="EditTransaction/@transaction.TransactionId">
                            Edit
                        </a>
                        <a class="btn btn-danger" href="DeleteTransaction/@transaction.TransactionId">
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Transaction> TransactionList = new();
    List<User> Users = new();
    DateTime startDate = new DateTime(DateTime.Today.Year, DateTime.Today.Month, 1);
    DateTime endDate = new DateTime(DateTime.Today.Year, DateTime.Today.Month, 1).AddMonths(1).AddDays(-1);
    int selectedUserId;

    protected override async Task OnInitializedAsync()
    {
        Users = await userService.GetAllUsersAsync();
        await LoadTransactionsAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        await LoadTransactionsAsync();
    }

    private async Task LoadTransactionsAsync()
    {
        TransactionList = await transactionService.GetTransactionsByUserAndTimeframeAsync(selectedUserId, startDate, endDate);
    }

    private async Task UpdateTransactionList()
    {
        if (selectedUserId > 0)
        {
            TransactionList = await transactionService.GetTransactionsByUserAndTimeframeAsync(selectedUserId, startDate, endDate);
        }
        else
        {
            TransactionList = await transactionService.GetTransactionsByUserAndTimeframeAsync(null, startDate, endDate);
        }
        StateHasChanged();
    }
}
