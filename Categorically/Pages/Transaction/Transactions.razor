@page "/Transactions"
@using Categorically.Data
@inject TransactionService transactionService

<NavLink class="nav-link" href="AddTransaction">
    <span class="oi oi-plus" aria-hidden="true">Add New</span>
</NavLink>

<h1>Transaction List</h1>
@if (TransactionList is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Transaction Date</th>
                <th>Amount</th>
                <th>Charged By Name</th>
                <th>Description</th>
                <th>Category</th>
                <th>User</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var transaction in TransactionList)
            {
                <tr>
                    <td>@transaction.TransactionDate.ToShortDateString()</td>
                    <td>@transaction.Amount</td>
                    <td>@transaction.ChargedByName</td>
                    <td>@transaction.Description</td>
                    <td>@transaction.Category?.CategoryName</td>
                    <td>@transaction.User.UserName</td>
                    <td>
                        <a class="nav-link" href="EditTransaction/@transaction.TransactionId">
                            <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                        </a>
                        <a class="nav-link" href="DeleteTransaction/@transaction.TransactionId">
                            <span class="oi oi-trash" aria-hidden="true">Delete</span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Transaction> TransactionList;

    protected override async Task OnInitializedAsync()
    {
        TransactionList = await transactionService.GetAllTransactionsAsync();
    }
}
