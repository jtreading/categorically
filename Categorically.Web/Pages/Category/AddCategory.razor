@page "/AddCategory"
@using Categorically.DataAccess.Models
@using Categorically.Tasks;
@inject ICategoryTasks categoryTasks
@inject IUserTasks userTasks
@inject NavigationManager navigationManager

<h2>Add Category</h2>
<hr />

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="CategoryName" class="control-label">Category Name</label>
                <input form="CategoryName" class="form-control" @bind="@category.CategoryName" />
            </div>
            <div class="form-group">
                <label for="UserId" class="control-label">User</label>
                <select form="UserId" class="form-control" @bind="@category.UserId">
                    <option value="">Select user</option>
                    @foreach (var user in users)
                    {
                        <option value="@user.UserId">@user.UserName</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateCategory" value="Save" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    Category category = new();
    List<User> users = new();

    protected override async Task OnInitializedAsync()
    {
        users = await userTasks.GetAllUsersAsync();
    }

    protected async Task CreateCategory()
    {
        await categoryTasks.InsertCategoryAsync(category);
        navigationManager.NavigateTo("Categories");
    }

    void Cancel()
    {
        navigationManager.NavigateTo("Categories");
    }
}
