@page "/summary"
@using Categorically.DataAccess.Models;
@using Categorically.Tasks.Tasks;
@using Radzen
@using Radzen.Blazor

<h3>SummaryView</h3>

<div class="container">
    <div class="row">
        <div class="col-sm-12 col-lg-6 offset-lg-3 my-5">
            <RadzenCard class="w-100 mb-4">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <RadzenChart SeriesClick=@OnSeriesClick>
                <RadzenPieSeries Data="@summaryData" Title="Summary" CategoryProperty="CategoryName" ValueProperty="Amount">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenPieSeries>
            </RadzenChart>
        </div>
    </div>
</div>

@code {
    [Inject]
    private TransactionTasks _transactionTasks { get; set; }

    bool showDataLabels = false;

    void OnSeriesClick(SeriesClickEventArgs args)
    {
        Console.WriteLine("POTATO");
    }

    List<SummaryItem> summaryData = new List<SummaryItem>();

    // override for blazor oninitializedasync
    protected override async Task OnInitializedAsync()
    {
        DateTime startDate = new DateTime(2023, 1, 1);
        DateTime endDate = new DateTime(2023, 12, 31);
        int userId = 1;

        summaryData = await _transactionTasks.GetSummaryItemsAsync(userId, startDate, endDate);
    }
}