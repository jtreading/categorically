@page "/DeleteUser/{userId:int}"
@using Categorically.Tasks
@using Categorically.DataAccess.Models
@inject IUserTasks userTasks
@inject NavigationManager navigationManager

<h2>Delete User</h2>
<hr />
<h3>Are you sure want to delete this user?</h3>
<form>
    <div class="row">
        <div class=" col-md-8">
            <div class="form-group">
                <label>User Id:</label>
                <label>@user.UserId</label>
            </div>
            <div class="form-group">
                <label>User Name:</label>
                <label>@user.UserName</label>
            </div>
            <div class="form-group">
                <label>First Name:</label>
                <label>@user.FirstName</label>
            </div>
            <div class="form-group">
                <label>Last Name:</label>
                <label>@user.LastName</label>
            </div>
            <div class="form-group">
                <label>Email:</label>
                <label>@user.Email</label>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-danger" @onclick="@DeleteThisUser" value="Delete" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public int userId { get; set; }
    User user = new User();

    protected override async Task OnInitializedAsync()
    {
        var response = await userTasks.GetUserAsync(userId);
        if (response != null)
        {
            user = response;
        }
    }

    protected async void DeleteThisUser()
    {
        await userTasks.DeleteUserAsync(user);
        navigationManager.NavigateTo("Users");
    }

    void Cancel()
    {
        navigationManager.NavigateTo("Users");
    }
}